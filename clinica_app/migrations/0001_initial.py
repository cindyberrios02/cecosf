# Generated by Django 5.0.6 on 2024-06-11 21:32

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch_office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='1', max_length=255, unique=True, verbose_name='Branch_office')),
                ('phone', models.CharField(blank=True, default='1', max_length=255, null=True)),
                ('address', models.CharField(blank=True, default='1', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Medicina General', max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(default='1', max_length=254, unique=True, verbose_name='email')),
                ('first_name', models.CharField(default='1', max_length=50)),
                ('last_name', models.CharField(default='1', max_length=50)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_patient', models.BooleanField(default=False)),
                ('is_doctor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dni', models.CharField(blank=True, default='1', max_length=8, null=True, verbose_name='DNI')),
                ('phone', models.IntegerField(blank=True, default=0, null=True)),
                ('address', models.CharField(blank=True, default='1', max_length=50, null=True, verbose_name='Dirección')),
                ('city', models.CharField(blank=True, default='1', max_length=40, null=True, verbose_name='Ciudad')),
                ('mr_number', models.CharField(blank=True, default='1', max_length=20, null=True, verbose_name='Número de Matrícula')),
                ('image_profile', models.ImageField(blank=True, null=True, upload_to='doctor_images/')),
                ('branch_offices', models.ManyToManyField(related_name='doctors', to='clinica_app.branch_office')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('specialist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinica_app.specialist')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dni', models.CharField(blank=True, default='1', max_length=8, null=True, verbose_name='DNI')),
                ('phone', models.IntegerField(blank=True, default=0, null=True)),
                ('address', models.CharField(blank=True, default='1', max_length=50, null=True, verbose_name='Dirección')),
                ('city', models.CharField(blank=True, default='1', max_length=40, null=True, verbose_name='Ciudad')),
                ('social_work', models.CharField(blank=True, default='1', max_length=20, null=True, verbose_name='Obra Social')),
                ('sw_number', models.CharField(blank=True, default='1', max_length=20, null=True, verbose_name='Número de Obra Social')),
                ('date_of_birth', models.DateField()),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField(default=datetime.time(9, 0))),
                ('end_time', models.TimeField(null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('stand_by', 'Stand_by'), ('registered', 'Registered'), ('waiting', 'Waiting'), ('inside', 'Inside'), ('finished', 'Finished'), ('missed', 'Missed')], default='stand_by', max_length=20)),
                ('origin', models.CharField(choices=[('web', 'Web'), ('phone', 'Phone')], default='web', max_length=10)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinica_app.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='clinica_app.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('status', models.CharField(choices=[('available', 'Available'), ('booked', 'Booked')], default='available', max_length=10)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinica_app.doctor')),
            ],
            options={
                'unique_together': {('doctor', 'date', 'start_time', 'end_time')},
            },
        ),
    ]
